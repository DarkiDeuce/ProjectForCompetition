import telebot
from random import randint, choice
from telebot import types

hp_monster = 0
cost = 0
recovery = 0

bot = telebot.TeleBot("5224662237:AAHinmeM1NgsnRAqHIS1Vk55PzOgSwS0i_M")

def Starting_–°haracteristics():
    global hp, max_hp, dam, xp, gold, lvl, DamWeapon

    hp = 1000
    max_hp = 100
    dam = 1
    xp = 0
    gold = 10000
    lvl = 0
    DamWeapon = 0

def Indicators():
    global hp, max_hp, dam, DamWeapon, xp, lvl, gold

    Interface = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3, one_time_keyboard=False)
    YourHp = types.KeyboardButton("–ó–¥–æ—Ä–æ–≤—å–µ: " + str(hp) + "/" + str(max_hp) + "‚ù§")
    YourDam = types.KeyboardButton("–£—Ä–æ–Ω: " + str(dam + DamWeapon) + "üó°")
    YourXp = types.KeyboardButton("–û–ø—ã—Ç: " + str(xp) + "üìö")
    YourLvl = types.KeyboardButton("–£—Ä–æ–≤–µ–Ω—å: " + str(lvl) + "üìñ")
    YourGold = types.KeyboardButton("–ó–æ–ª–æ—Ç–æ: " + str(gold) +"ü™ô")
    Interface.add(YourHp, YourDam, YourGold, YourLvl, YourXp)

    return Interface

def Repeat ():
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("üí•–î–∞!", callback_data="Repeat"))
    markup.add(types.InlineKeyboardButton("üñê–ù–µ—Ç!", callback_data="NoRepeat"))

    return markup

def Travel(message):
    Interface = Indicators()

    bot.send_message(message.chat.id, "üåÖ –í—ã–π–¥—è –∑–∞ –ø–æ—Ä–æ–≥ —Ä–æ–¥–Ω–æ–≥–æ –¥–æ–º–∞ –≤—ã –ø—Ä–µ–¥–≤–∫—É—à–∞–µ—Ç–µ —Å–ª–∞–¥–æ—Å—Ç–Ω—ã–π –≤–∫—É—Å –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö –ø—Ä–µ–∫–ª—é—á–µ–Ω–∏–π!", reply_markup=Interface)
    bot.register_next_step_handler(message, event(message))

def spawn_monstr():
    probability = randint(1, 10)

    if probability >= 1 and probability <= 4:
        name_Spawn_monster = "–ì–æ–±–ª–∏–Ω"
        return name_Spawn_monster
    if probability >= 5 and probability <= 7:
        name_Spawn_monster = "–û—Ä–∫"
        return name_Spawn_monster
    if probability == 8 or probability == 9:
        name_Spawn_monster = "–û–≥—Ä"
        return name_Spawn_monster
    if probability == 10:
        name_Spawn_monster = "–¢—Ä–æ–ª—å"
        return name_Spawn_monster

def Hp_SpawnMonstr(name_monster):
    global hp_monster

    if name_monster == "–ì–æ–±–ª–∏–Ω":
        hp_monster = 30
        return hp_monster
    if name_monster == "–û—Ä–∫":
        hp_monster = 60
        return hp_monster
    if name_monster == "–û–≥—Ä":
        hp_monster = 85
        return hp_monster
    if name_monster == "–¢—Ä–æ–ª—å":
        hp_monster = 110
        return hp_monster

def Dam_SpawnMonstr(name_monster):

    if name_monster == "–ì–æ–±–ª–∏–Ω":
        dam_monster = 15
        return dam_monster
    if name_monster == "–û—Ä–∫":
        dam_monster = 30
        return dam_monster
    if name_monster == "–û–≥—Ä":
        dam_monster = 45
        return dam_monster
    if name_monster == "–¢—Ä–æ–ª—å":
        dam_monster = 85
        return dam_monster

def priceGold(name):
    if name == "–ì–æ–±–ª–∏–Ω":
        praice = 80
        return praice
    if name == "–û—Ä–∫":
        praice = 130
        return praice
    if name == "–û–≥—Ä":
        praice = 170
        return praice
    if name == "–¢—Ä–æ–ª—å":
        praice = 240
        return praice

def pricXpMonster(name):
    if name == "–ì–æ–±–ª–∏–Ω":
        xpFromMonster = 25
        return xpFromMonster
    if name == "–û—Ä–∫":
        xpFromMonster = 50
        return xpFromMonster
    if name == "–û–≥—Ä":
        xpFromMonster = 75
        return xpFromMonster
    if name == "–¢—Ä–æ–ª—å":
        xpFromMonster = 100
        return xpFromMonster

def PresentationTheMonster (message):
    global name_monster, damage_monster, hp_monster

    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("üó° –í—Å—Ç—É–ø–∏—Ç—å –≤ –±–æ–π!", callback_data="Attack the monster!"))
    markup.add(types.InlineKeyboardButton("üèÉ–ü–æ–ø—ã—Ç–∞—Ç—å—Å—è —Å–±–µ–∂–∞—Ç—å –æ—Ç –º–æ–Ω—Å—Ç—Ä–∞.",
                                          callback_data="Run away from the monster."))
    Presentation = "–ù–∞ –≤–∞—à–µ–º—É –ø—É—Ç–∏ –≤—Å—Ç–∞–ª " + name_monster + ". –û–∫–∏–Ω—É–≤ –≤–∑–≥—è–¥–æ–º –µ–≥–æ –º—É—Å–∫—É–ª–∞—Ç—É—Ä—É —Ç–µ–ª–∞ –≤—ã –¥–µ–ª–∞–µ—Ç–µ –≤—ã–≤–æ–¥, —á—Ç–æ –µ–≥–æ –∑–¥–æ—Ä–æ–≤—å–µ —Ä–æ–≤–Ω–æ " + str(
        hp_monster) +  " –µ–¥–∏–Ω–∏—Ü–∞–º. –ó–∞–º–µ—Ç–∏–≤ –≥—Ä–∞–º–æ—Å—Ç–∫–æ–µ –æ—Ä—É–∂–∏–µ –≤ —Ä—É–∫–∞—Ö —Å—É—â–µ—Å—Ç–≤–∞ –≤—ã –ø–æ–Ω–∏–º–∞–µ—Ç–µ: –æ–Ω —Å–ø–æ—Å–æ–±–µ–Ω –Ω–∞–Ω–µ—Å—Ç–∏ " + str(
        damage_monster) + " —É—Ä–æ–Ω–∞ –∑–∞ —É–¥–∞—Ä. –ñ–µ–ª–∞–µ—Ç–µ —Å –Ω–∏–º –ø–æ–¥—Ä–∞—Ç—å—Å—è?"
    bot.send_message(message.chat.id, text=Presentation, reply_markup=markup)

def levelUp(message):
    global xp, lvl

    if lvl <= 5 and xp >= 100:
        lvl += 1
        xp -= 100

        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ –Ω–∞ 15 –µ–¥–µ–Ω–∏—Ü.", callback_data= "Increase maximum health"))
        markup.add(types.InlineKeyboardButton("–ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π —É—Ä–æ–Ω –Ω–∞ 5 –µ–¥–µ–Ω–∏—Ü.", callback_data="Increase permanent damage"))
        markup.add(types.InlineKeyboardButton("–ü–æ–ª–Ω–æ—Å—Ç—å—é –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ.", callback_data="Fully restore health"))
        NewLvl = "–í—ã –ø–µ—Ä–µ—à–ª–∏ –Ω–∞ –Ω–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å: " + str(lvl) +"!\n\n –í—ã –º–æ–∂–µ—Ç–µ —É–≤–µ–ª–∏—á–∏—Ç—å:"
        bot.send_message(message.chat.id, text = NewLvl, reply_markup=markup)

    elif lvl <= 10 and xp >= 150:
        lvl += 1
        xp -= 150

        markup = types.InlineKeyboardMarkup()
        markup.add(
            types.InlineKeyboardButton("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ –Ω–∞ 15 –µ–¥–µ–Ω–∏—Ü.", callback_data="Increase maximum health"))
        markup.add(
            types.InlineKeyboardButton("–ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π —É—Ä–æ–Ω –Ω–∞ 5 –µ–¥–µ–Ω–∏—Ü.", callback_data="Increase permanent damage"))
        markup.add(types.InlineKeyboardButton("–ü–æ–ª–Ω–æ—Å—Ç—å—é –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ.", callback_data="Fully restore health"))
        NewLvl = "–í—ã –ø–µ—Ä–µ—à–ª–∏ –Ω–∞ –Ω–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å: " + str(lvl) + "!\n\n –í—ã –º–æ–∂–µ—Ç–µ —É–≤–µ–ª–∏—á–∏—Ç—å:"
        bot.send_message(message.chat.id, text = NewLvl, reply_markup=markup)

    elif lvl <= 15 and xp >= 200:
        lvl += 1
        xp -= 200

        markup = types.InlineKeyboardMarkup()
        markup.add(
            types.InlineKeyboardButton("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ –Ω–∞ 15 –µ–¥–µ–Ω–∏—Ü.", callback_data="Increase maximum health"))
        markup.add(
            types.InlineKeyboardButton("–ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π —É—Ä–æ–Ω –Ω–∞ 5 –µ–¥–µ–Ω–∏—Ü.", callback_data="Increase permanent damage"))
        markup.add(types.InlineKeyboardButton("–ü–æ–ª–Ω–æ—Å—Ç—å—é –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ.", callback_data="Fully restore health"))
        NewLvl = "–í—ã –ø–µ—Ä–µ—à–ª–∏ –Ω–∞ –Ω–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å: " + str(lvl) + "!\n\n –í—ã –º–æ–∂–µ—Ç–µ —É–≤–µ–ª–∏—á–∏—Ç—å:"
        bot.send_message(message.chat.id, text = NewLvl, reply_markup=markup)

    elif lvl <= 20 and xp >= 250:
        lvl += 1
        xp -= 250

        markup = types.InlineKeyboardMarkup()
        markup.add(
            types.InlineKeyboardButton("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ –Ω–∞ 15 –µ–¥–µ–Ω–∏—Ü.", callback_data="Increase maximum health"))
        markup.add(
            types.InlineKeyboardButton("–ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π —É—Ä–æ–Ω –Ω–∞ 5 –µ–¥–µ–Ω–∏—Ü.", callback_data="Increase permanent damage"))
        markup.add(types.InlineKeyboardButton("–ü–æ–ª–Ω–æ—Å—Ç—å—é –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ.", callback_data="Fully restore health"))
        NewLvl = "–í—ã –ø–µ—Ä–µ—à–ª–∏ –Ω–∞ –Ω–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å: " + str(lvl) + "!\n\n –í—ã –º–æ–∂–µ—Ç–µ —É–≤–µ–ª–∏—á–∏—Ç—å:"
        bot.send_message(message.chat.id, text = NewLvl, reply_markup=markup)

    elif lvl <= 20 and xp >= 300:
        lvl += 1
        xp -= 300

        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ –Ω–∞ 15 –µ–¥–µ–Ω–∏—Ü.", callback_data="Increase maximum health"))
        markup.add(types.InlineKeyboardButton("–ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π —É—Ä–æ–Ω –Ω–∞ 5 –µ–¥–µ–Ω–∏—Ü.", callback_data="Increase permanent damage"))
        markup.add(types.InlineKeyboardButton("–ü–æ–ª–Ω–æ—Å—Ç—å—é –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ.", callback_data="Fully restore health"))
        NewLvl = "–í—ã –ø–µ—Ä–µ—à–ª–∏ –Ω–∞ –Ω–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å: " + str(lvl) + "!\n\n –í—ã –º–æ–∂–µ—Ç–µ —É–≤–µ–ª–∏—á–∏—Ç—å:"
        bot.send_message(message.chat.id, text = NewLvl, reply_markup=markup)
    else:
        bot.register_next_step_handler(message, event(message))

def LevelUpMaxHp (message):
    global max_hp

    max_hp += 15
    Interface = Indicators()
    bot.send_message(message.chat.id, "–í–∞—à–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ —É–≤–µ–ª–µ—á–∏–Ω–æ –∏ —Ä–æ–≤–Ω–æ:" + str(max_hp), reply_markup=Interface)
    bot.register_next_step_handler(message, event(message))

def LevelUpDam(message):
    global dam

    dam += 5
    Interface = Indicators()
    bot.send_message(message.chat.id, "–í–∞—à –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π —É—Ä–æ–Ω —É–≤–µ–ª–µ—á–∏–Ω –Ω–∞ 5 –µ–¥–µ–Ω–∏—Ü –∏ —Ä–∞–≤–µ–Ω:" + str(dam), reply_markup=Interface)
    bot.register_next_step_handler(message, event(message))

def LevelUpFullHp(message):
    global max_hp, hp

    hp -= hp
    hp += max_hp
    Interface = Indicators()
    bot.send_message(message.chat.id, "–í–∞—à–µ –∑–¥–æ—Ä–æ–≤—å–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ", reply_markup=Interface)
    bot.register_next_step_handler(message, event(message))

def ChoiceFaight (message):
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("üó°–ê—Ç–∞–∫–æ–≤–∞—Ç—å –º–æ–Ω—Å—Ç—Ä–∞!", callback_data="Attack the monster!(On Fight"))
    markup.add(types.InlineKeyboardButton("üèÉ–ü–æ–ø—ã—Ç–∞—Ç—å—Å—è —Å–±–µ–∂–∞—Ç—å –æ—Ç –º–æ–Ω—Å—Ç—Ä–∞.",
                                                      callback_data="Run away from the monster. (On Fight"))
    bot.send_message(message.chat.id, "–ß—Ç–æ –±—É–¥–µ—Ç–µ –¥–µ–ª–∞—Ç—å?", reply_markup=markup)

def MovePlayer(message):
    global hp, dam, xp, gold, hp_monster, name_monster, price_Monstor, DamWeapon, priceXp_Monsotr

    if hp_monster > 0:
        hp_monster -= (dam + DamWeapon)
        if hp_monster <= 0:
            gold += price_Monstor
            xp += priceXp_Monsotr
            Interface = Indicators()
            KillTheMonster = "–í—ã –Ω–∞–Ω–µ—Å–ª–∏ –º–æ–Ω—Å—Ç—Ä—É: " + str(dam + DamWeapon) + " —É—Ä–æ–Ω–∞. \n\nüíÄ–í—ã —É–±–∏–ª–∏ –º–æ–Ω—Å—Ç—Ä–∞! –í—ã —è—Å–Ω–æ –ø–æ–Ω–∏–º–∞–µ—Ç–µ: –≤–∞—à–µ –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ –≤–µ–¥–µ–Ω–∏—è –±–æ—è —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤—É–µ—Ç—Å—è —Å –∫–∞–∂–¥—ã–º —É–±–∏—Ç—ã–º –≤—Ä–∞–≥–æ–º –∏ —É–¥–∞—Ä–æ–º –≤ –±–æ—é. –°–µ–π—á–∞—Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–≤–æ–µ–≥–æ \
–æ–ø—ã—Ç–∞ —Ä–æ–≤–Ω–æ: " + str(xp)+  ". –ß—É–≤—Å—Ç–≤–æ –≥–æ—Ä–¥–æ—Å—Ç–∏ –∑–∞ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é —Å–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å –æ–∫—É—Ç—ã–≤–∞–µ—Ç –≥–ª–∞–∑–∞ –Ω–µ–ø—Ä–æ–≥–ª—è–¥–Ω–æ–π –ø–µ–ª–µ–Ω–æ–π. –°–º–∞–∫—É—è –≤–µ—Å—å —É—Å–ø–µ—Ö –≤—ã –∑–∞–º–µ—á–µ—Ç–µ ‚Äì –∏–∑ \
—Ç–æ–ª—å–∫–æ —á—Ç–æ —É–±–∏—Ç–æ–≥–æ " + name_monster + "–∞ —Ç–∞–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –≤—ã—Å—ã–ø–∞–ª–∞—Å—å –∫—É—á–∫–∞ –º–æ–Ω–µ—Ç –≤ —Ä–∞–∑–º–µ—Ä–µ: " + str(price_Monstor) + " –∑–æ–ª–æ—Ç—ã—Ö"
            bot.send_message(message.chat.id, text=KillTheMonster, reply_markup=Interface)
            bot.register_next_step_handler(message, levelUp(message))
        elif hp_monster > 0:
            Remainder = "–í—ã –Ω–∞–Ω–µ—Å–ª–∏ –º–æ–Ω—Å—Ç—Ä—É: " + str(dam + DamWeapon) + " —É—Ä–æ–Ω–∞. \n\nüíö–£ –º–æ–Ω—Å—Ç—Ä–∞ –æ—Å—Ç–∞–ª–æ—Å—å: " + str(hp_monster) + " –∑–¥–æ—Ä–æ–≤—å—è."
            bot.send_message(message.chat.id, text=Remainder)
            bot.register_next_step_handler(message, MoveMonster(message))

def MoveMonster (message):
    global hp, dam, DamWeapon, xp, lvl, max_hp, gold, name_monster, damage_monster

    hp -= damage_monster
    Interface = Indicators()

    MonsterDamage = "–•–æ–¥ –º–æ–Ω—Å—Ç—Ä–∞! \n\n‚öí"+name_monster + " –∞—Ç–∞–∫—É–µ—Ç –≤–∞—Å –∏ –Ω–∞–Ω–æ—Å–∏—Ç " + str(damage_monster) + " —É—Ä–æ–Ω–∞"
    bot.send_message(message.chat.id, text=MonsterDamage, reply_markup=Interface)
    if hp > 0:
        bot.register_next_step_handler(message, ChoiceFaight(message))
    else:
        repeat = Repeat()
        end = name_monster + " –æ–∫–∞–∑–∞–ª—Å—è —Å–∏–ª—å–Ω–µ–µ. –í—ã —Ç—Ä–∞–≥–∏—á–µ—Å–∫–∏–µ –ø–æ–≥–∏–±–ª–∏.\
                                     \n–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞. \n\n–ñ–µ–ª–∞–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ –Ω–æ–≤–æ–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ?"

        bot.send_message(message.chat.id, text=end, reply_markup=repeat)

def RunFight (message):
    global hp, damage_monster

    escapeAttempt = randint(1,2)

    if escapeAttempt == 1:
        markup = types.InlineKeyboardMarkup()
        markup.add()
        bot.send_message(message.chat.id, "–ö–∞–∫–æ–π –∂–µ –æ–Ω –º–µ–¥–ª–µ–Ω–Ω—ã–π –∏ –Ω–µ—É–∫–ª—é–∂—ã–π. –í–∞—à –ø–æ–±–µ–≥ –ø—Ä–æ—à—ë–ª —É—Å–ø–µ—à–Ω–æ!")
        bot.register_next_step_handler(message, event(message))

    elif escapeAttempt == 2:
        hp -= damage_monster
        if hp > 0:
            NotRun = "–°–±–µ–∂–∞—Ç—å –æ—Ç –º–æ–Ω—Å—Ç—Ä–∞ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è. –ò–∑-–∑–∞ —Å–æ–±—Å–≤—Ç–µ–Ω–Ω–æ–π –Ω–µ—É–∫–ª—é–∂–µ—Å—Ç–∏ –≤–æ –≤—Ä–µ–º—è –ø–æ–±–µ–≥–∞ –≤—ã –ø–∞–¥–∞–µ—Ç–µ,\
                                                                —á—Ç–æ –ø–æ–∑–≤–ª—è–µ—Ç –º–æ–Ω—Å—Ç—Ä—É –∞—Ç–∞–∫–∞–≤–∞—Ç—å –≤–∞—Å –∏ –Ω–∞–Ω–µ—Å—Ç–∏ " + str(
                damage_monster) + " —É—Ä–æ–Ω–∞. \n\nüó°–ü—Ä–∏–π–¥—ë—Ç—Å—è –¥—Ä–∞—Ç—å—Å—è! \n\nüò°–í –ø–æ—Ä—ã–≤–µ —è—Ä–æ—Å—Ç–∏, —Ä–µ–∑–∫–∏–º —Ä—ã–≤–∫–æ–º –≤—ã –ø–æ–¥—Ä—ã–≤–∞–µ—Ç–µ —Å–≤–æ—ë —Ç–µ–ª–æ —Å –∑–µ–º–ª–∏ –∏ –Ω–∞–æ—Ç–º–∞—à—å –±—å—ë—Ç–µ –≤—Ä–∞–≥–∞!"
            Interface = Indicators()
            bot.send_message(message.chat.id, text=NotRun, reply_markup= Interface)
            bot.register_next_step_handler(message, MovePlayer(message))
        elif hp < 0:
            repeat = Repeat()
            Interface = Indicators()
            bot.send_message(message.chat.id, "–°–±–µ–∂–∞—Ç—å –æ—Ç –º–æ–Ω—Å—Ç—Ä–∞ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è. –ò–∑-–∑–∞ —Å–æ–±—Å–≤—Ç–µ–Ω–Ω–æ–π –Ω–µ—É–∫–ª—é–∂–µ—Å—Ç–∏ –≤–æ –≤—Ä–µ–º—è –ø–æ–±–µ–≥–∞ –≤—ã –ø–∞–¥–∞–µ—Ç–µ,\
                                                            —á—Ç–æ –ø–æ–∑–≤–ª—è–µ—Ç –º–æ–Ω—Å—Ç—Ä—É –Ω–∞–Ω–µ—Å—Ç–∏ —Ñ–∞—Ç–∞–ª—å–Ω—ã–π —É–¥–∞—Ä –ø–æ –≤–∞–º. –í –ø—Ä–æ—Ü–µ—Å—Å–µ –±–∏—Ç–≤—ã –≤—ã —Ç—Ä–∞–≥–∏—á–µ—Å–∫–∏ –ø–æ–≥–∏–±–∞–µ—Ç–µ.", reply_markup= Interface)
            bot.send_message(message.chat.id, "–ñ–µ–ª–∞–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ —Å–Ω–æ–≤–∞?", reply_markup=repeat)

def shop (message):
    global gold, hp, max_hp, DamWeapon, PrinterCostWeapon, PrinterDamWeapon

    weapon = ["–î–ª–∏–Ω–Ω—ã–π –º–µ—á", "–¢–æ–ø–æ—Ä", "–ö–∏–Ω–∂–∞–ª", "–ö–æ–ø—å—ë"]
    weaponQuality = ["–ø–ª–æ—Ö–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞", "—Å—Ä–µ–¥–Ω–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞", "–æ—Ç–ª–∏—á–Ω–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞"]

    Quality = choice(weaponQuality)
    NameSubject = choice(weapon)

    def DamWeapon_Q(Quality_Q, weapon_Q):
        global PrinterDamWeapon
        PrinterDamWeapon = 0

        if Quality_Q == "–ø–ª–æ—Ö–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞":
            PrinterDamWeapon += 5
        elif Quality_Q == "—Å—Ä–µ–¥–Ω–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞":
            PrinterDamWeapon += 10
        elif Quality_Q == "–æ—Ç–ª–∏—á–Ω–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞":
            PrinterDamWeapon += 15

        if weapon_Q == "–î–ª–∏–Ω–Ω—ã–π –º–µ—á":
            PrinterDamWeapon += 40
        elif weapon_Q == "–¢–æ–ø–æ—Ä":
            PrinterDamWeapon += 30
        elif weapon_Q == "–ö–æ–ø—å—ë":
            PrinterDamWeapon += 20
        elif weapon_Q == "–ö–∏–Ω–∂–∞–ª":
            PrinterDamWeapon += 10
        return PrinterDamWeapon

    def CostWeapon_Q(Quality_Q, weapon_Q):
        global PrinterCostWeapon
        PrinterCostWeapon = 0

        if Quality_Q == "–ø–ª–æ—Ö–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞":
            PrinterCostWeapon += 100
        elif Quality_Q == "—Å—Ä–µ–¥–Ω–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞":
            PrinterCostWeapon += 200
        elif Quality_Q == "–æ—Ç–ª–∏—á–Ω–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞":
            PrinterCostWeapon += 300

        if weapon_Q == "–î–ª–∏–Ω–Ω—ã–π –º–µ—á":
            PrinterCostWeapon += 200
        elif weapon_Q == "–¢–æ–ø–æ—Ä":
            PrinterCostWeapon += 150
        elif weapon_Q == "–ö–æ–ø—å—ë":
            PrinterCostWeapon += 100
        elif weapon_Q == "–ö–∏–Ω–∂–∞–ª":
            PrinterCostWeapon += 50

        return PrinterCostWeapon

    markup = types.InlineKeyboardMarkup(row_width=3)
    markup.add(types.InlineKeyboardButton("üíä–ù–∞—Å—ã—â–µ–Ω–Ω–æ –∫—Ä–∞—Å–Ω—ã–π —ç–ª–µ–∫—Å–∏—Ä, –∫–æ—Ç–æ—Ä—ã–π –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç –≤–∞–º 30 –∑–¥–æ—Ä–æ–≤—å—è.\
\n–°—Ç–æ–∏–º–æ—Å—Ç—å —ç–ª–µ–∫—Å–∏—Ä–∞: 50 –∑–æ–ª–æ—Ç–∞", callback_data="Elixir +30hp"))
    markup.add(types.InlineKeyboardButton("‚ù£–ë–æ–ª—å—à—É—é –±–∞–Ω–∫—É –Ω–∞–ø–æ–ª–Ω–µ–Ω–Ω—É—é –±–æ–≥—Ä–æ–≤–æ–π –∂–∏–¥–∫–æ—Å—Ç—å—é, –∫–æ—Ç–æ—Ä–∞—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç –≤–∞–º 100 –∑–¥–æ—Ä–æ–≤—å—è.\
\n–°—Ç–æ–∏–º–æ—Å—Ç—å —ç–ª–µ–∫—Å–∏—Ä–∞: 135 –∑–æ–ª–æ—Ç–∞", callback_data="Elixir +100hp"))
    Selling_Weapons ="‚öî"+ str(NameSubject) + " " + str(Quality) + " —Å—Ç–æ–∏–º–æ—Å—Ç—å—é " + str(CostWeapon_Q(Quality, NameSubject)) + " –∏ —É—Ä–æ–Ω–æ–º –≤ " + str(DamWeapon_Q(Quality, NameSubject)) + " –µ–¥–µ–Ω–∏—Ü."
    markup.add(types.InlineKeyboardButton(text=Selling_Weapons, callback_data="Selling_weapons"))
    markup.add(types.InlineKeyboardButton(text="‚úñ–ù–∞ –ø–æ–ª–∫–∞—Ö –º–∞–≥–∞–∑–∏–Ω–∞ –Ω–µ—Ç –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏—Ö –≤–∞—Å —Ç–æ–≤–∞—Ä–æ–≤.", callback_data="ExitShop"))

    Store_Appearance = "–í—ã –∑–∞—Ö–æ–¥–∏—Ç–µ –≤ –º–∞–ª–µ–Ω—å–∫–∏–π –ø—Ä–∏—è—Ç–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω. –ó–∞ –ø—Ä–∏–ª–∞–≤–∫–æ–º —Å—Ç–æ–∏—Ç –≤–æ–æ–¥—É—à–µ–≤–ª—ë–Ω–Ω—ã–π –≤–∞—à–∏–º –ø–æ—è–≤–ª–µ–Ω–∏–µ–º —Ç–æ—Ä–≥–æ–≤–∏–µ—Ü –æ–∂–∏–¥–∞—é—â–∏–π –≤–∞—à–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π.\
           \n\nü™ô–†–µ–∑–∫–∏–º –¥–≤–∏–∂–µ–Ω–∏–µ–º –∑–∞–ø—É—Å—Ç–∏–≤ —Ä—É–∫—É –≤ –∫–∞—Ä–º–∞–Ω –≤–∞—à–∏—Ö —à—Ç–∞–Ω–æ–≤ –≤—ã —Å–ª—à—ã–∏—Ç–µ –∑–≤–æ–Ω. –ü–æ –≥–ª—É–±–∏–Ω–µ –∏ –ø–ª–æ—Ç–Ω–æ—Å—Ç–∏ –º–µ—Ç–∞–ª–∏—á–µ—Å–∫–æ–≥–æ –∑–≤–æ–Ω–∞ –≤—ã –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç–µ –≤–∞—à–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ " + str(gold) + " –∑–æ–ª–æ—Ç—ã—Ö."
    bot.send_message(message.chat.id, text=Store_Appearance, reply_markup=markup)

def Buy (message):
    global gold, cost, recovery

    if gold >= cost:
        gold -= cost
        bot.register_next_step_handler(message, ExaminationMaxHp(message, recovery))
    else:
        bot.send_message(message.chat.id, "–î–ª—è –ø–æ–∫—É–ø–∫–∏ —ç—Ç–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ –≤–∞–º –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –∑–æ–ª–æ—Ç–∞. –¢–æ—Ä–≥–æ–≤—ã–µ—Ü —Å—Ä–∞–∑—É –ø–æ–¥–º–µ—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–π –∏ —Ñ–∞–∫—Ç –∏ –æ–±—Ä–∞—â–∞–µ—Ç –Ω–∞ –≤–∞—Å —Ç—è–∂—ë–ª—ã–π, –ø—Ä–µ–∑—Ä–µ–Ω–Ω—ã–π –≤–∑–≥—è–ª–¥ –≤ –∞–∫—Ç–∏–≤–Ω–æ–º –æ–∂–¥–∞–Ω–∏–∏ –≤–∞—à–µ–≥–æ —É—Ö–æ–¥–∞.\
                                          \n\n–í—ã –ø–æ—Å–ø–µ—à–Ω–æ –ø–æ–∫–∏–¥–∞–µ—Ç–µ –º–∞–≥–∞–∑–∏–Ω.")
        bot.register_next_step_handler(message, event(message))

Seller_Satisfied = "\n\nüóø–ü—Ä–æ–¥–∞–≤–µ—Ü –¥–æ–≤–æ–ª—å–Ω—ã–π –∑–≤–æ–Ω–∫–æ–π –º–æ–Ω–µ—Ç–æ–π –±—ã—Å—Ç—Ä–æ —Å–∫—Ä—ã–≤–∞–µ—Ç—Å—è –≤ –¥–∞–ª—å–Ω–µ–π –∫–æ–º–Ω–∞—Ç–µ –º–∞–≥–∞–∑–∏–Ω–∞. –Ø—Å–Ω–æ –æ–¥–Ω–æ: –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å—Å—è –∫ –ø—Ä–∏–ª–∞–≤–∫—É –æ–Ω –Ω–µ —Å–æ–±–∏—Ä–∞–µ—Ç—Å—è. –í—ã –ø–æ–∫–∏–¥–∞–µ—Ç–µ –º–∞–≥–∞–∑–∏–Ω."

def ExaminationMaxHp (message, Replenishment):
    global hp, max_hp

    if hp+Replenishment > max_hp:
        hp -= hp
        hp += max_hp
        Interface = Indicators()

        bot.send_message(message.chat.id, "–í–∞—à–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–µ–≤—ã—Å–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –≤: " +str(max_hp) + ". –í–∞—à–µ –∑–¥–æ—Ä–æ–≤—å–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ –¥–æ –ø—Ä–µ–¥–µ–ª–∞!" + Seller_Satisfied, reply_markup=Interface)
        bot.register_next_step_handler(message, event(message))
    else:
        hp += Replenishment
        Interface = Indicators()
        bot.send_message(message.chat.id, "–í—ã —á—É–≤—Å—Ç–≤—É–µ—Ç–µ –∫–∞–∫ —ç–ª–µ–∫—Å–∏—Ä –Ω–∞–ø–æ–ª–Ω—è–µ—Ç –≤–∞—Å —Å–∏–ª–æ–π –∏ –∑–∞–∂–∏–≤–ª—è–µ—Ç —Å—Ç–∞—Ä—ã–µ —Ä–∞–Ω—ã." + str(hp) + Seller_Satisfied, reply_markup=Interface)
        bot.register_next_step_handler(message, event(message))

def Buy_Weapon (message):
    global DamWeapon, cost, gold, PrinterDamWeapon, dam, PrinterDamWeapon

    if gold >= cost:
        gold -= cost
        DamWeapon = PrinterDamWeapon
        Interface = Indicators()
        bot.send_message(message.chat.id, "\t  –ë–ª–∞–≥–æ–¥–∞—Ä—è –Ω–æ–≤–æ–º—É –æ—Ä—É–∂–∏–µ –≤–∞—à —É—Ä–æ–Ω —É–≤–µ–ª–∏—á–µ–Ω –∏ —Ç–µ–ø–µ—Ä—å —Ä–∞–≤–µ–Ω: " + str(dam + DamWeapon) + " –µ–¥–µ–Ω–∏—Ü–∞–º." + Seller_Satisfied, reply_markup=Interface)
        bot.register_next_step_handler(message, event(message))
    else:
        bot.send_message(message.chat.id, "–î–ª—è –ø–æ–∫—É–ø–∫–∏ —ç—Ç–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ –≤–∞–º –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –∑–æ–ª–æ—Ç–∞. –¢–æ—Ä–≥–æ–≤—ã–µ—Ü —Å—Ä–∞–∑—É –ø–æ–¥–º–µ—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–π –∏ —Ñ–∞–∫—Ç –∏ –æ–±—Ä–∞—â–∞–µ—Ç –Ω–∞ –≤–∞—Å —Ç—è–∂—ë–ª—ã–π, –ø—Ä–µ–∑—Ä–µ–Ω–Ω—ã–π –≤–∑–≥—è–ª–¥ –≤ –∞–∫—Ç–∏–≤–Ω–æ–º –æ–∂–¥–∞–Ω–∏–∏ –≤–∞—à–µ–≥–æ —É—Ö–æ–¥–∞.\
                                          \n\n–í—ã –ø–æ—Å–ø–µ—à–Ω–æ –ø–æ–∫–∏–¥–∞–µ—Ç–µ –º–∞–≥–∞–∑–∏–Ω.")
        bot.register_next_step_handler(message, event(message))

@bot.message_handler(commands=["start"])
def start(message):
    global hp, DamWeapon, gold, xp, lvl, dam, max_hp
    Starting_–°haracteristics()

    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("üß≠–û—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ!", callback_data="Go on a trip!"))
    bot.send_message(message.chat.id, "–Ø—Ä–∫–∏–π —Å–≤–µ—Ç —Å–æ–ª–Ω–µ—á–Ω—ã—Ö –ª—É—á–µ–π, –∫—É–ø–∞—é—â–∏–π –±–ª–µ–¥–Ω—É—é –∫–æ–∂—É —Ç–≤–æ–µ–≥–æ –ª–∏—Ü–∞ –±–µ—Å—Ü–µ—Ä–µ–º–æ–Ω–Ω–æ –≤—ã—Ä—ã–≤–∞–µ—Ç —Å–æ–∑–Ω–∞–Ω–∏–µ –∏–∑ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–≥–æ, –Ω–æ —É–∂–µ –∑–∞–±—ã—Ç–æ–≥–æ —Å–Ω–∞.\
–ù–µ —Ç–æ—Ä–æ–ø—è—Å—å –≤—Å—Ç–∞–≤ —Å –∫—Ä–æ–≤–∞—Ç–∏ –∏ –æ–∫–∏–Ω—É–≤ –≤–∑–≥–ª—è–¥–æ–º –º–∞–ª–µ–Ω—å–∫—É—é, –ø—Ä–∏–≤—ã—á–Ω—É—é –∫–æ–º–Ω–∞—Ç—É –≤–∑–æ—Ä –Ω–µ–≤–æ–ª—å–Ω–æ –ø–∞–¥–∞–µ—Ç –Ω–∞ —Ä–∞–±–æ—á–∏–π —Å—Ç–æ–ª, —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–Ω—ã–π –≤ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —à–∞–≥–∞—Ö –æ—Ç –∫–æ–ª—ã–±–µ–ª–∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö –º–µ—á—Ç–∞–Ω–∏–π.\
–ù–∞–≥—Ä–æ–º–æ–∂–¥–µ–Ω–Ω—ã–π —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –∫–∞—Ä—Ç–∞–º–∏, –ø–µ—Ä–≥–∞–º–µ–Ω—Ç–∞–º–∏ –∏ –∫–Ω–∏–≥–∞–º–∏ —Å–ª–æ–≤–Ω–æ –Ω–∞—Ä–æ—á–Ω–æ —Å–∫–∏–¥—ã–≤–∞–µ—Ç —Å–æ —Å–≤–æ–µ–π –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ –ª–∏—Å—Ç —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –¥–∞–ª—ë–∫–∏—Ö –∑–µ–º–µ–ª—å ‚Äì –∑–µ–º–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –∫ –∫–æ—Ç–æ—Ä—ã–º –±—ã–ª–æ –¥–∞–≤–Ω–µ–π –º–µ—á—Ç–æ–π.\
–ü—Ä–µ–∫—Ä–∞—Å–Ω–∞—è –ø–æ—Ä–∞ - –Ω–µ –∑–Ω–∞–Ω–∏–µ –ø–æ–Ω—è—Ç–∏–π: –±–µ–¥–Ω–æ—Å—Ç—å, –±–µ–≥—Å—Ç–≤–æ, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å. \
\n\nüèû–°–µ–≥–æ–¥–Ω—è —Ç—ã —Ç–≤—ë—Ä–¥–æ —Ä–µ—à–∞–µ—à—å –æ–±–æ—Ä–≤–∞—Ç—å —Ç–æ–Ω–∫—É—é –ª–µ–Ω—Ç—É —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π –æ–¥–Ω–æ–æ–±—Ä–∞–∑–Ω–æ–π –∂–∏–∑–Ω–∏ –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ. ",
                     reply_markup=markup)

def event(message):
    situation = randint(1, 3)

    if situation == 1:
        markup1 = types.InlineKeyboardMarkup()
        key_yes = types.InlineKeyboardButton(text="üó∫ –î–∞!", callback_data="Yes, let's move on")
        key_no = types.InlineKeyboardButton(text="üõå –ù–µ–µ. –ù–∞ —Å–µ–≥–æ–¥–Ω—è —Ö–≤–∞—Ç–∏—Ç, –Ω—É–∂–Ω–æ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å.",
                                            callback_data="No, we will stop.")
        markup1.add(key_yes, key_no)
        bot.send_message(message.chat.id, "–ó–¥–µ—Å—å –Ω–µ—Ç –Ω–∏—á–µ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ. –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –ø—É—Ç—å?", reply_markup=markup1)
    elif situation == 2:
        markup1 = types.InlineKeyboardMarkup()
        key_yes = types.InlineKeyboardButton(text="üí∞ –î–∞, –∑–∞–π–¥—É –≤ –º–∞–≥–∞–∑–∏–Ω.", callback_data="Yes, go to the store")
        key_no = types.InlineKeyboardButton(text="üñº–ù–µ–µ, –≤ —ç—Ç–æ–º –Ω–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏.",
                                            callback_data="No, it's not necessary")
        markup1.add(key_yes, key_no)
        bot.send_message(message.chat.id, "üõñ –í—ã –Ω–∞—Ç–∫–Ω—É–ª–∏—Å—å –Ω–∞ –º–∞–≥–∞–∑–∏–Ω. –•–æ—Ç–∏—Ç–µ –∑–∞–π—Ç–∏?",
                         reply_markup=markup1)
    elif situation == 3:
        markup1 = types.InlineKeyboardMarkup()
        key_yes = types.InlineKeyboardButton(text="üîé–ü—Ä–æ–≤–µ—Ä—é, —á—Ç–æ —ç—Ç–æ —Ç–∞–∫–æ–µ",
                                             callback_data="I will not run from danger!")
        key_no = types.InlineKeyboardButton(text="üò¨–ù–µ—Ç –Ω—É–∂–¥—ã —Ä–∏—Å–∫–æ–≤–∞—Ç—å, –ª—É—á—à–µ –æ–±–æ–π—Ç–∏.",
                                            callback_data="No need to risk")
        markup1.add(key_yes, key_no)
        bot.send_message(message.chat.id, "‚ùì–î–≤–∏–≥–∞—è—Å—å –Ω–∞ —Å–≤–æ—ë–º –ø—É—Ç–∏ –≤—ã –∑–∞–º–µ—á–∞—Ç–µ –∞–∫—Ç–∏–≤–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ –≤ –¥–∞–ª–∏. –î–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –Ω–µ–ø—Ä–∏—è—Ç–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏–π –ø—Ä–∏–Ω—è—Ç–æ —Ä–µ—à–µ–Ω–∏–µ: –æ—Å–µ—Å—Ç—å –≤ –∫—É—Å—Ç–∞—Ö –∏ –∑–∞—Ç–∞–∏—Ç—å—Å—è,\
–≤ –æ–∂–∏–¥–∞–Ω–∏–∏ –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è —Å–æ–±—ã—Ç–∏–π.", reply_markup=markup1)

@bot.callback_query_handler(func=lambda call: True)
def event_choice(call):
    global hp, max_hp, dam, xp, gold, hp_monster, DamWeapon, name_monster, price_Monstor, priceXp_Monsotr, damage_monster, cost, recovery, PrinterCostWeapon

    if call.data == "Yes, let's move on":
        bot.send_message(call.message.chat.id, "–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ!")
        bot.register_next_step_handler(call.message, event(call.message))

    elif call.data == "Go on a trip!":
        bot.register_next_step_handler(call.message, Travel(call.message))

    elif call.data == "No, we will stop.":
        repeat = Repeat()
        bot.send_message(call.message.chat.id,"–ò–∑-–∑–∞ –≤–∞—à–µ–≥–æ –∂–µ–ª–∞–Ω–∏—è –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è –Ω–∞ –º–µ—Å—Ç–µ –≤—ã —É—Å–Ω—É–ª–∏. –ü–æ–∫–∞ –≤—ã —Å–ø–∞–ª–∏ –Ω–∞ –≤–∞—Å –Ω–∞–ø–∞–ª –≤–∞–º–ø–∏—Ä –∏ —É–±–∏–ª!\n\n–ñ–µ–ª–∞–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ —Å–Ω–æ–≤–∞?", reply_markup=repeat)

    elif call.data == "Yes, go to the store":
        bot.register_next_step_handler(call.message, shop(call.message))

    elif call.data == "No, it's not necessary":
        bot.send_message(call.message.chat.id, "–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ!")
        bot.register_next_step_handler(call.message, event(call.message))

    elif call.data == "Elixir +30hp":
        cost = 50
        recovery = 30
        bot.register_next_step_handler(call.message, Buy(call.message))

    elif call.data == "Elixir +100hp":
        cost = 135
        recovery = 100
        bot.register_next_step_handler(call.message, Buy(call.message))

    elif call.data == "Selling_weapons":
        cost = PrinterCostWeapon
        bot.register_next_step_handler(call.message, Buy_Weapon(call.message))

    elif call.data == "ExitShop":
        bot.send_message(call.message.chat.id, "–ü–æ–Ω—è–≤, —á—Ç–æ –≤—ã –Ω–µ —Å—Ä–±–∏—Ä–∞–µ—Ç–µ—Å—å –æ—Å—Ç–∞–≤–ª—Ç—å –¥–µ–Ω—å–≥–∏ –≤ –º–∞–≥–∞–∑–∏–Ω–µ —Ç–æ—Ä–≥–æ–≤–µ—Ü –Ω–∞—á–∏–Ω–∞–µ—Ç –ø—Ä–µ–∑–∏—Ç–µ–ª—å–Ω–æ —Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –≤–∞—Å. –í—ã –ø–æ–∫–∏–¥–∞–µ—Ç–µ –º–∞–≥–∞–∑–∏–Ω.")
        bot.register_next_step_handler(call.message, event(call.message))

    elif call.data == "No need to risk":
        retreat = randint(1, 2)
        if retreat == 1:
            name_monster = spawn_monstr()
            hp_monster = Hp_SpawnMonstr(name_monster)
            damage_monster = Dam_SpawnMonstr(name_monster)
            price_Monstor = priceGold(name_monster)
            priceXp_Monsotr = pricXpMonster(name_monster)
            bot.send_message(call.message.chat.id,
                             "–°–ª–∏—à–∫–æ–º –ø–æ–∑–¥–Ω–æ! –ù–µ—è—Å–Ω–∞—è —Ñ–∏–≥—É—Ä–∞ —Å –±–æ–ª—å—à–æ–π —Å–∫–æ—Ä–æ—Å—Ç—å—é –Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –≤ –≤–∞—à—É —Å—Ç–æ—Ä–æ–Ω—É.")
            bot.register_next_step_handler(call.message, PresentationTheMonster(call.message))
        elif retreat == 2:
            bot.send_message(call.message.chat.id,
                             "–ü–æ –º–µ—Ä–µ –ø—Ä–µ–±—ã–≤–∞–Ω–∏—è –≤ –∑–∞—Ä–æ—Å–ª—è—Ö –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –æ–±—ä–µ–∫—Ç –≤–ø–µ—Ä–µ–¥–∏ —É–¥–∞–ª—è–ª—Å—è, –∞ —Å–µ–π—á–∞—Å –∏ –≤–æ–≤—Å–µ —Å–∫—Ä—ã–ª—Å—è –∏–∑ –≤–∏–¥—É. –ü—É—Ç—å —Å–≤–æ–±–æ–¥–µ–Ω!")
            bot.register_next_step_handler(call.message, event(call.message))

    elif call.data == "I will not run from danger!":
        name_monster = spawn_monstr()
        hp_monster = Hp_SpawnMonstr(name_monster)
        damage_monster = Dam_SpawnMonstr(name_monster)
        price_Monstor = priceGold(name_monster)
        priceXp_Monsotr = pricXpMonster(name_monster)
        bot.send_message(call.message.chat.id, "–û—Ç–ø—Ä–∞–≤–ª—è–µ–º—Å—è")
        bot.register_next_step_handler(call.message, PresentationTheMonster(call.message))

    elif call.data == "Attack the monster!":
        bot.register_next_step_handler(call.message, ChoiceFaight(call.message))

    elif call.data == "Run away from the monster.":
        bot.register_next_step_handler(call.message, RunFight(call.message))

    elif call.data == "Attack the monster!(On Fight":
        bot.register_next_step_handler(call.message, MovePlayer(call.message))

    elif call.data == "Run away from the monster. (On Fight":
        bot.register_next_step_handler(call.message, RunFight(call.message))

    elif call.data == "Increase maximum health":
        bot.register_next_step_handler(call.message, LevelUpMaxHp(call.message))

    elif call.data == "Increase permanent damage":
        bot.register_next_step_handler(call.message, LevelUpDam(call.message))

    elif call.data == "Fully restore health":
        bot.register_next_step_handler(call.message, LevelUpFullHp(call.message))

    elif call.data == "Repeat":
        bot.register_next_step_handler(call.message, start(call.message))

bot.polling(none_stop=True)
